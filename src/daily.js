import DailyIframe from "@daily-co/daily-js";
import { doc, updateDoc } from "firebase/firestore";

// B√Ωr til n√Ωtt Daily herbergi
export async function createDailyRoom() {
  const apiKey = process.env.REACT_APP_DAILY_API_KEY;

  try {
    const res = await fetch("https://api.daily.co/v1/rooms", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
        Authorization: `Bearer ${apiKey}`
      },
      body: JSON.stringify({
        properties: {
          enable_chat: false,
          start_video_off: true,
          start_audio_off: false,
          exp: Math.floor(Date.now() / 1000) + 3600
        }
      })
    });

    const data = await res.json();

    if (!res.ok) {
      console.error("Villa vi√∞ a√∞ b√∫a til Daily herbergi:", data);
      return null;
    }

    return data.url;
  } catch (error) {
    console.error("‚ö†Ô∏è Villa vi√∞ Daily API:", error);
    return null;
  }
}

// üéß Streymi me√∞ a√∞eins hlj√≥√∞i ‚Äì engin skj√°mynd send
export async function startDailyCallWithAudioOnly(roomId, db) {
  const url = await createDailyRoom();
  if (!url) {
    alert("Gat ekki b√∫i√∞ til streymi. Athuga√∞u API-lykil og nettengingu.");
    return;
  }

  const roomRef = doc(db, "rooms", roomId);
  await updateDoc(roomRef, {
    streamingActive: true,
    dailyRoomUrl: url
  });

  const callObject = DailyIframe.createCallObject();
  await callObject.join({ url, videoSource: false });

  try {
    // Gr√≠pa mic hlj√≥√∞
    const micStream = await navigator.mediaDevices.getUserMedia({ audio: true });

    // Gr√≠pa tab/system audio + video (video √æarf a√∞ vera til svo vi√∞ f√°um audio)
    const displayStream = await navigator.mediaDevices.getDisplayMedia({
      video: true, // leyfa browsernum a√∞ velja tab/skj√°
      audio: true
    });

    // üëâ Fjarl√¶gja video tracki√∞ STRAX
    displayStream.getVideoTracks().forEach((track) => track.stop());

    const AudioContext = window.AudioContext || window.webkitAudioContext;
    const audioContext = new AudioContext();

    const destination = audioContext.createMediaStreamDestination();
    const micSource = audioContext.createMediaStreamSource(micStream);
    const tabSource = audioContext.createMediaStreamSource(displayStream);

    micSource.connect(destination);
    tabSource.connect(destination);

    // ‚úÖ B√¶ta a√∞eins vi√∞ audio track
    destination.stream.getTracks().forEach((track) => {
      if (track.kind === "audio") {
        callObject.addTrack(track);
      }
    });

    console.log("‚úÖ Audio-only streymi virkt (mic + tab) ‚Äì video fjarl√¶gt");
  } catch (error) {
    console.error("‚ùå Villa vi√∞ hlj√≥√∞deilingu:", error);
  }

  window.open(url, "_blank");
}
